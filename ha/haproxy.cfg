global
    log /dev/log local0
    log /dev/log local1 notice
    maxconn 2000
    user haproxy
    group haproxy

defaults
    log     global
    mode    tcp
    option  tcplog
    timeout connect 10s
    timeout client  1m
    timeout server  1m

resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      10s
    hold refused    10s
    hold nx         10s 
    hold timeout    10s
    hold valid      10s
    hold obsolete   10s

listen stats
    bind *:8080
    mode http
    stats enable
    stats uri /
    stats realm Haproxy\ Statistics
    stats auth admin:adminpassword
    stats admin if TRUE

# Frontend for Redis service
frontend redis
    bind *:6379                             # Binding on the default Redis port
    default_backend redis-backend

# Backend for Redis nodes
backend redis-backend
    mode tcp
    option tcp-check
    tcp-check send PING\r\n
    tcp-check expect string +PONG
    tcp-check send info\ replication\r\n
    tcp-check expect string role:master
    tcp-check send QUIT\r\n
    tcp-check expect string +OK
    server redis_backend_01 redis-node1:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
    server redis_backend_02 redis-node2:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
    server redis_backend_03 redis-node3:6379 maxconn 1024 check inter 1s resolvers docker init-addr libc,none

# Frontend for PostgreSQL service
frontend postgres
    bind *:5432                             # Binding on the default PostgreSQL port
    default_backend postgres-backend

# Backend for PostgreSQL nodes
backend postgres-backend
    mode tcp                                # PostgreSQL is a TCP-based service
    balance roundrobin                      # Distribute requests evenly
    option tcp-check                        # Enable TCP health checks
    server pg-0 pg-0:5432 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
    server pg-1 pg-1:5432 maxconn 1024 check inter 1s resolvers docker init-addr libc,none

# # Frontend for MySQL service
# frontend mysql-frontend
#     bind *:3306
#     mode tcp
#     default_backend mysql-backend

# # Backend for MySQL nodes
# backend mysql-backend
#     mode tcp
#     balance first
#     option mysql-check
#     server mariadb1 mariadb1:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
#     server mariadb2 mariadb2:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
#     server mariadb3 mariadb3:3306 maxconn 1024 check inter 1s resolvers docker init-addr libc,none
