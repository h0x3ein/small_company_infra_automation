version: '3.9'

services:
  haproxy:
    image: haproxy:latest
    deploy:
      mode: replicated
      placement:
        constraints:
        - node.labels.ha == true
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=web_net"
        - "traefik.http.routers.haproxy.entrypoints=http"
        - "traefik.http.routers.haproxy.rule=Host(`ha.blog.zerops.ir`)"
        #- "traefik.http.middlewares.web-auth.basicauth.users=${HAPROXY_AUTH_USER}:${HAPROXY_AUTH_PASS}"
        #- "traefik.http.routers.haproxy-secure.middlewares=web-auth"
        - "traefik.http.routers.haproxy.middlewares=https-redirect"
        - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
        - "traefik.http.routers.haproxy-secure.entrypoints=https"
        - "traefik.http.routers.haproxy-secure.rule=Host(`ha.blog.zerops.ir`)"
        - "traefik.http.routers.haproxy-secure.tls=true"
        - "traefik.http.routers.haproxy-secure.tls.options=default"
        - "traefik.http.routers.haproxy-secure.tls.certresolver=mycert"
        - "traefik.http.services.haproxy.loadbalancer.server.port=8080"
      replicas: 1  # Increase for high availability
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg  # HAProxy config file
    networks:
      - web_net           # External access for Traefik routing
      - internal-network  # Internal communication for MySQL, Redis, PostgreSQL

networks:
  web_net:
    external: true  # External network for Traefik routing
  internal-network:
    external: true  # Internal network for services like MySQL, Redis, PostgreSQL