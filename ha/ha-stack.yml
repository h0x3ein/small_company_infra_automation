version: '3.9'

services:
  haproxy:
    image: haproxy:latest
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.role == manager 
      replicas: 1  # Increase for high availability
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg  # HAProxy config file
    networks:
      - web_net           # External access for Traefik routing
      - internal-network  # Internal communication for MySQL, Redis, PostgreSQL
    labels:
      - traefik.enable=true
      - traefik.docker.network=web_net

      # HTTP routing for HAProxy stats (Traefik)
      - traefik.http.routers.haproxy-stats-http.rule=Host(`ha.blog.zerops.ir`)
      - traefik.http.routers.haproxy-stats-http.entrypoints=web
      - traefik.http.routers.haproxy-stats-http.middlewares=redirect-to-https
      - traefik.http.services.haproxy-stats.loadbalancer.server.port=8081

      # HTTPS routing for HAProxy stats (Traefik)
      - traefik.http.routers.haproxy-stats-https.rule=Host(`ha.blog.zerops.ir`)
      - traefik.http.routers.haproxy-stats-https.entrypoints=secure
      - traefik.http.routers.haproxy-stats-https.tls=true
      - traefik.http.routers.haproxy-stats-https.tls.certresolver=mycert

networks:
  web_net:
    external: true  # External network for Traefik routing
  internal-network:
    external: true  # Internal network for services like MySQL, Redis, PostgreSQL